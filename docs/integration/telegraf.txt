===============================
Using Telegraf with CrateDB
===============================

`Telegraf <https://github.com/influxdata/telegraf>`_ is a plugin-driven server agent for collecting & reporting metrics.
Unsing Telegraf in combination with CrateDB allows you collecting a huge amount of data and query them with SQL in real-time.


.. rubric:: Table of Contents

.. contents::
   :local:

Install
=======

There is an open pull request for adding the CrateDB output plugin to `Telegraf <https://github.com/influxdata/telegraf>`_.

Until this pull request is merged, we are providing binaries for:

- `linux 368 <https://cdn.crate.io/downloads/dist/telegraf/telegraf_0.1-170921123755.linux.386.tar.gz>`_
- `linux amd64 <https://cdn.crate.io/downloads/dist/telegraf/telegraf_0.1-170921123755.linux.amd64.tar.gz>`_
- `darwin amd64 <https://cdn.crate.io/downloads/dist/telegraf/telegraf_0.1-170921123755.darwin.amd64.tar.gz>`_
- `windows amd64 <https://cdn.crate.io/downloads/dist/telegraf/telegraf_0.1-170921123755.windows.amd64.tar.gz>`_

Or, you can build it by yourself `from the source <https://github.com/tomsvogel/telegraf#from-source>`_.

Once Telegraf is installed, continue to the next section.

Configure
=========

Create the default config:

.. code-block:: bash

  ./telegraf config > telegraf.conf

Now, configure CrateDB instead of InfluxDB.

Do this by finding and removing the InfluxDB config from this file, and then
adding your CrateDB config.

Your CrateDB config should look something like this:

.. code-block:: bash

  [[outputs.cratedb]]

  # A lib/pq connection string.
  # See http://godoc.org/github.com/lib/pq#hdr-Connection_String_Parameters
  url = "postgres://crate@localhost/doc?sslmode=disable"
  # Timeout for all CrateDB queries.
  timeout = "5s"
  # Name of the table to store metrics in.
  table = "metrics"
  # If true, and the metrics table does not exist, create it automatically.
  table_create = true

On Telegraf start the table metrics will be created in the doc shema. A view seconds later you will see Telegraf metrics stored in this table.

Run
===

Once Telegraf has been configured, you can start it, like so:

.. code-block:: bash

  ./telegraf --config telegraf.conf
