==============================
Run CrateDB on Microsoft Azure
==============================

Microsoft Azure is the second largest and fastest growing provider of Cloud
Services in the world. It offers a wide variety of options including Windows
servers, containers, application images and much more.

Getting CrateDB working on Azure with Linux or Windows is a simple process. You
can use Azure's management console or CLI interface (`Learn how to install here
<https://azure.microsoft.com/en-us/documentation/articles/xplat-cli-install/>`_).

.. rubric:: Table of Contents

.. contents::
   :local:

Azure and Linux
===============

Create a Resource Group
-----------------------

Azure uses 'Resource Groups' to group together related services and resources
for easier management.

Create a resource group for the CrateDB cluster by selecting *Resource groups*
under the *new* left hand panel of the Azure portal.

.. image:: azure_new_resource_group.png
   :alt: Create Virtual Network

Create a Network Security Group
-------------------------------

CrateDB uses two ports, one for inter-node communication (``4300``) and one for
it's http endpoint (``4200``), so access to these needs to be opened.

Create a *New Security Group*, giving it a name and assigning it to the
'Resource Group' just created.

.. image:: azure_new_nsg.png
   :alt: Create New Security Group

Find that security group in your resources list and open it's settings,
navigating to the *Inbound security rules* section.

.. image:: azure_nsg_inbound.png
   :alt: Create New Security Group

Add a rule for each port:

.. image:: azure_inbound_rules.png
   :alt: Create New Security Group

Create a Virtual Network
------------------------

To create a cluster of CrateDB nodes on some cloud hosting providers, CrateDB
relies on unicast for inter-node communication.

The easiest way to get Unicast communication working with Azure is to create a
Virtual Network (*+ -> Networking -> Virtual Network*) so that all the cluster
nodes exist on the same IP range. Give the network a name, a region and let
Azure handle all the remaining settings by clicking the next arrow on each
screen.

.. image:: azure_create_vn.png
   :alt: Create Virtual Network

Once the Virtual Network has been created, find it in your resources list, open
the edit screen and the *Subnets* setting. Add the security group created
earlier to the subnet.

.. image:: azure_vn_subnet_sg.png
   :alt: Add Security Group

Create Virtual Machines
-----------------------

Next create virtual machines to act as your CrateDB nodes. In this tutorial, I
chose two low-specification Ubuntu 14.04 servers, but you likely have your own
preferred configurations.

Most importantly, make sure you select the Virtual Network created earlier.

Install CrateDB
---------------

*Note that these instructions should be followed on each VM in your cluster.*

To Install CrateDB, ssh into your VMs and follow `the standard process for
Linux installation`_, this will automatically start an instance of CrateDB,
which we will need to restart after the next step.

.. _the standard process for Linux installation: https://crate.io/docs/crate/getting-started/en/latest/install/linux.html

Configure CrateDB
-----------------

*Note that these instructions should be followed on each VM in your cluster.*

To set the Unicast hosts for the CrateDB cluster we change the default
configuration file at */etc/crate/crate.yml*.

Uncomment / add these lines:

.. code-block:: yaml

    discovery.zen.ping.unicast.hosts:
          - internal-ip-address:4300
          - internal-ip-address:4300

Note You might want to try DNS based discovery for inter-node communication,
`find more details
<https://crate.io/docs/reference/configuration.html#discovery-via-dns>`_ in our
documentation.

Uncomment and set the cluster name

.. code-block:: yaml

    cluster.name: crate

Restart CrateDB ``service crate restart``.

Azure and Windows
=================

Initial Setup
-------------

To create a Resource Group, Network security group and virtual network, follow
the same steps as for Azure and Linux.

Create Virtual Machines
-----------------------

Similar steps to creating Virtual Machines for Azure and Linux, but create the
VM based on the 'Windows Server 2012 R2 Datacenter' image.

Install CrateDB
---------------

*Note that these instructions should be followed on each VM in your cluster.*

To install CrateDB on Windows Server, you will need a `Java JDK installed
<http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html>`_.
Ensure that the ``JAVA*HOME`` environment variable is set.

.. image:: azure_envvar.png
   :alt: Environment Variables

Next `download the CrateDB Tarball`_, expand it and move to a convenient
location.

.. _download the CrateDB Tarball: https://crate.io/docs/crate/getting-started/en/latest/install/local/tarball.html

Configure CrateDB and Windows
-----------------------------

*Note that these instructions need to be followed on each VM in your cluster.*

Edit the *config/crate.yml* configuration file in the expanded directory to
make the same changes noted above in running CrateDB on Azure & Linux.

We need to allow the ports CrateDB uses through the Windows Firewall

.. image:: azure_port.gif
   :alt: Firewall configuration

Start crate by running ``bin/crate``.
